# The networking team has all their regional networking hubs in the following resource group.
# The group's default location does not matter, it's not tied to the resource locations.
# [This takes less than one minute to run.]
az group create --name rg-enterprise-networking-hubs --location centralus

# And all of their regional spokes in the following resource group.
# [This takes less than minute to run.]
az group create --name rg-enterprise-networking-spokes --location centralus

# When they created the hub for eastus2, it didn't have any spokes yet defined, yet the networking
# team always lays out a base hub pattern. A hub always contains an Azure Firewall (with some org-wide
# policies), Azure Bastion, a gateway subnet for on-prem connectivity, and Azure Monitor for network
# observability. They follow Microsoft's recommended sizing for the subnets.
#
# The networking team has decided that 10.200.[0-9].0 will be where all regional hubs are homed
# on their organization's network space.
#
# Note: Azure Bastion and the On-Prem Connectivity is not actually deployed in this reference
# implementation, just the subnets for them are.
# [This takes about five minutes to run.]
az deployment group create --resource-group rg-enterprise-networking-hubs --template-file ../../networking/hub-default.json --parameters location=eastus2

# In addition to the eastus2 regional hub (deployed above) you can assume there are similar deployed as well in
# in other Azure regions.

# The hub creation will emit the following:
# * hubVnetId - which the network team will need to know for future spokes that get created
#             - E.g. /subscriptions/[subcription id]/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-eastus2-hub

# The networking team receives a request from an app team in business unit (BU) 0001 for a network
# spoke to house their new AKS-based application (Internally know as Application ID: A0008). The
# network team talks with the app team to understand their requirements and aligns those needs with
# Microsoft's best practices for a secure AKS cluster deployment. They capture those specific
# requirements and deploy the spoke, aligning those specs; connecting it to the matching regional hub.
# [This takes about ten minutes to run.]
az deployment group create --resource-group rg-enterprise-networking-spokes --template-file ../../networking/spoke-BU0001A0008.json --parameters location=eastus2 hubVnetResourceId="/subscriptions/[subscription id]/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-eastus2-hub"

# The spoke creation will emit the following:
# * nodepoolSubnetResourceIds - An array containing the subnet Ids of the AKS nodepools in the spoke
#           - E.g. ["/subscriptions/[subscription id]/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-hub-spoke-BU0001A0008-00/subnets/snet-clusternodes"]
# * clusterVnetResourceId - The Resource ID of the vnet that the cluster will land in
#           - E.g. /subscriptions/[subscription id]/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-hub-spoke-BU0001A0008-00

# Now that their hub has a spoke and can no longer run off of the generic hub template, the networking
# team creates a named hub template to forever represent this specific hub and the features this specific
# hub needs in order to support its unique spokes' requirements. As new spokes are attached and new
# requirements arise for the regional hub, they will be added to this main template file.
# [This takes about three minutes to run.]
az deployment group create --resource-group rg-enterprise-networking-hubs --template-file ../../networking/hub-regionA.json --parameters location=eastus2 nodepoolSubnetResourceIds="['/subscriptions/[subscription id]/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-hub-spoke-BU0001A0008-00/subnets/snet-clusternodes']"

# At this point the networking team has delivered a spoke in which BU 0001's app team can lay down
# their AKS cluster (ID: A0008). The networking team provides the necessary information to the app team
# for them to reference in their infrastructure-as-code artifacts.

# Note: Hubs and Spokes are controlled by the Networking Team's GitHub actions pipelines.  This automation
# is not included in this reference implementation as this is focused on the AKS baseline and not the networking
# team's CI/CD practices.

# Next, the cluster is deployed; see cluster-deploy.azcli
