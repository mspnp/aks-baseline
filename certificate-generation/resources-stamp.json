{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subdomainName": {
            "type": "String",
            "metadata": {
                "description": "The name used for azure subdomain which we want the cert for"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Domain region"
            }
        },
        "ipResourceId":{
            "type": "string",
            "defaultValue": "newIp",
            "metadata": {
                "description": "ipResouceId"
            }
        }
    },
    "variables": {
        "subdomain" : "[replace(parameters('subdomainName'),'.','')]",
        "storageAccountName": "[replace(replace(variables('subdomain'), '_', ''),'-','')]",
        "appGatewayPublicIp":"[if(equals(parameters('ipResourceId'),'newIp'), resourceId('Microsoft.Network/publicIpAddresses',variables('subdomain')), parameters('ipResourceId'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "condition" : "[equals(parameters('ipResourceId'),'newIp')]",
            "name": "[variables('subdomain')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('subdomain')]",
                    "fqdn":  "[concat(variables('subdomain'),'.',parameters('location'),'.cloudapp.azure.com')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('storageAccountName')]",
            "location":  "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },        
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },        
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('subdomain')]",
            "location":  "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.20.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.20.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('subdomain'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('subdomain'))]"
            ],
            "properties": {
                "addressPrefix": "172.20.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-05-01",
            "name": "[variables('subdomain')]",
            "location":  "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('subdomain'),'default')]",
                "[resourceId('Microsoft.Network/publicIpAddresses',variables('subdomain'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('subdomain'),'default')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('appGatewayPublicIp')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(variables('storageAccountName'),'.blob.core.windows.net')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), concat('/probes/', variables('subdomain')))]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), concat('/httpListeners/', variables('subdomain')))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), concat('/backendAddressPools/', variables('subdomain')))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), concat('/backendHttpSettingsCollection/', variables('subdomain')))]"
                            },
                            "rewriteRuleSet": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('subdomain')), concat('/rewriteRuleSets/', variables('subdomain')))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/verificationdata/test.txt",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {}
                        }
                    }
                ],
                "rewriteRuleSets": [
                    {
                        "name": "[variables('subdomain')]",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "ruleSequence": 100,
                                    "conditions": [
                                        {
                                            "variable": "var_uri_path",
                                            "pattern": "^/.well-known/acme-challenge/(.+)$",
                                            "ignoreCase": true,
                                            "negate": false
                                        }
                                    ],
                                    "name": "[variables('subdomain')]",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [],
                                        "responseHeaderConfigurations": [],
                                        "urlConfiguration": {
                                            "modifiedPath": "/verificationdata/{var_uri_path_1}.txt",
                                            "reroute": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": 0,
                    "maxCapacity": 10
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}