{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appInstanceId": {
            "type": "string",
            "allowedValues": [
                "03",
                "04"
            ],
            "metadata": {
                "description": "The application instance id helps to generate a unique application instance identifier for multiple instances of the same application. This number is also going to be used to derive its adjacent resources details when needed"
            }
        },
        "clusterVNetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "The AKS cluster Virtual Network address prefix. All the subnets within the cluster-related will partially allocate address ranges from this space"
            }
        },
        "clusterNodesSubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "The AKS cluster nodes subnet address prefix. This prefix belongs to the address space passed as part of the clusterVNetAddressPrefix parameter value"
            }
        },
        "clusterIngressServicesSubnetAdressPrefix": {
            "type": "string",
            "metadata": {
                "description": "The AKS cluster ingress services subnet address prefix. This prefix belongs to the address space passed as part of the clusterVNetAddressPrefix parameter value"
            }
        },
        "applicationGatewaySubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "The AKS cluster ingress services subnet address prefix. This prefix belongs to the address space passed as part of the clusterVNetAddressPrefix parameter value"
            }
        },
        "hubVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The regional hub network to which this regional spoke will peer to."
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "australiaeast",
                "canadacentral",
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "germanywestcentral",
                "northeurope",
                "southafricanorth",
                "southcentralus",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia",
                "brazilsouth",
                "southcentralus"
            ],
            "metadata": {
                "description": "The spokes's regional affinity, must be the same as the hub's location. All resources tied to this spoke will also be homed in this region. The network team maintains this approved regional list which is a subset of zones with Availability Zone support."
            }
        }
    },
    "variables": {
        "appId": "[concat('BU0001A0042-', parameters('appInstanceId'))]",
        "clusterVNetName": "[concat('vnet-hub-spoke-', variables('appId'))]",

        "routeTableName": "[concat('route-to-', parameters('location'), '-hub-fw')]",
        "hubRgName": "[split(parameters('hubVnetResourceId'),'/')[4]]",
        "hubNetworkName": "[split(parameters('hubVnetResourceId'),'/')[8]]",

        "hubFwResourceId": "[resourceId(variables('hubRgName'), 'Microsoft.Network/azureFirewalls', concat('fw-', parameters('location')))]",
        "hubLaWorkspaceName": "[concat('la-hub-', parameters('location'), '-', uniqueString(parameters('hubVnetResourceId')))]",
        "hubLaWorkspaceResourceId": "[resourceId(variables('hubRgName'), 'Microsoft.OperationalInsights/workspaces', variables('hubLaWorkspaceName'))]",
        "toHubPeeringName": "[concat('spoke-to-', variables('hubNetworkName'))]",

        "primaryClusterPipName": "[concat('pip-', variables('appId'))]",
        "subdomainName": "[concat('region', uniqueString(resourceId(variables('hubRgName'), 'Microsoft.Network/publicIpAddresses', variables('primaryClusterPipName'))) )]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-07-01",
            "name": "[variables('routeTableName')]",
            "location": "[parameters('location')]",
            "comments": "Next hop to regional hub Azure Firewall",
            "properties": {
                "routes": [
                    {
                        "name": "r-nexthop-to-fw",
                        "properties": {
                            "nextHopType": "VirtualAppliance",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopIpAddress": "[reference(variables('hubFwResourceId'), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-nodepools')]",
            "location": "[parameters('location')]",
            "comments": "Default NSG on the AKS nodepools. Feel free to constrict further!",
            "properties": {
                "securityRules": []
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-nodepools'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat('nsg-', variables('clusterVNetName'), '-aksilbs')]",
            "location": "[parameters('location')]",
            "comments": "Default NSG on the AKS ILB subnet. Feel free to constrict further!",
            "properties": {
                "securityRules": []
            },
            "resources": [
                {
                    "name": "Microsoft.Insights/toHub",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "name": "[concat('nsg-', variables('clusterVNetName'), '-appgw')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "comments": "NSG on the App Gateway subnet.",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowOnlyFrontDoor",
                        "properties": {
                            "description": "Allow only Front Door Access. (If you wanted to allow-list specific IPs, this is where you'd list them.)",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureFrontDoor.Backend",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowControlPlaneInBound",
                        "properties": {
                            "description": "Allow Azure Control Plane in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "65200-65535",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHealthProbesInBound",
                        "properties": {
                            "description": "Allow Azure Health Probes in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "name": "Microsoft.Insights/toHub",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-07-01",
            "name": "[variables('clusterVNetName')]",
            "location": "[parameters('location')]",
            "comments": "65,536 (-reserved) IPs available to the workload, split across two subnets for AKS and one for App Gateway.",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-nodepools'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('clusterVNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "snet-clusternodes",
                        "properties": {
                            "addressPrefix": "[parameters('clusterNodesSubnetAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-nodepools'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "snet-clusteringressservices",
                        "properties": {
                            "addressPrefix": "[parameters('clusterIngressServicesSubnetAdressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-aksilbs'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "snet-applicationgateway",
                        "properties": {
                            "addressPrefix":  "[parameters('applicationGatewaySubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', variables('clusterVNetName'), '-appgw'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "2020-05-01",
                    "name": "[variables('toHubPeeringName')]",
                    "comments": "Peer to regional hub.",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                    ],
                    "properties": {
                        "remoteVirtualNetwork": {
                            "id": "[parameters('hubVnetResourceId')]"
                        },
                        "allowForwardedTraffic": false,
                        "allowVirtualNetworkAccess": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false
                    }
                },
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "Microsoft.Insights/toHub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                    ],
                    "properties": {
                        "workspaceId": "[variables('hubLaWorkspaceResourceId')]",
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[concat('CreateHubTo', variables('clusterVNetName'), 'Peer')]",
            "resourceGroup": "[variables('hubRgName')]",
            "comments": "Sub incremental deployment to perform hub-to-spoke peering",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', variables('clusterVNetName'), variables('toHubPeeringName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2020-07-01",
                            "name": "[concat(variables('hubNetworkName'), '/hub-to-', variables('clusterVNetName'))]",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                                },
                                "allowForwardedTraffic": false,
                                "allowGatewayTransit": false,
                                "allowVirtualNetworkAccess": true,
                                "useRemoteGateways": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-07-01",
            "name": "[variables('primaryClusterPipName')]",
            "location": "[parameters('location')]",
            "comments": "Used as primary entry point for workload. Expected to be assigned to an Azure Application Gateway.",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('subdomainName')]",
                    "fqdn":  "[concat(variables('subdomainName'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        }
    ],
    "outputs": {
        "clusterVnetResourceId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
            "type": "string"
        },
        "nodepoolSubnetResourceIds": {
            "value": "[createArray(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), 'snet-clusternodes'))]",
            "type": "array"
        },
        "appGwFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('primaryClusterPipName'))).dnsSettings.fqdn]"
        },
        "subdomainName": {
            "type": "string",
            "value": "[variables('subdomainName')]"
        },
        "appGatewayPublicIp": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/publicIPAddresses', variables('primaryClusterPipName'))]"
        }
    }
}
