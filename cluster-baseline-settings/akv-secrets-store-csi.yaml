apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-store-csi-driver
  namespace: cluster-baseline-settings
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver
    app.kubernetes.io/component: csi-driver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secretproviderclasses-role
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver
    app.kubernetes.io/component: csi-driver
rules:
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviderclasses
  verbs:
  - get
  - list
  - update
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviderclasses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secretproviderclasses-rolebinding
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver
    app.kubernetes.io/component: csi-driver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secretproviderclasses-role
subjects:
- kind: ServiceAccount
  name: secrets-store-csi-driver
  namespace: cluster-baseline-settings
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: secrets-store.csi.k8s.io
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver
    app.kubernetes.io/component: csi-driver
spec:
  podInfoOnMount: true
  attachRequired: false
  volumeLifecycleModes:
  - Ephemeral
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: secretproviderclasses.secrets-store.csi.x-k8s.io
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver-secretproviderclasses-crd
    app.kubernetes.io/component: csi-driver
spec:
  group: secrets-store.csi.x-k8s.io
  names:
    kind: SecretProviderClass
    listKind: SecretProviderClassList
    plural: secretproviderclasses
    singular: secretproviderclass
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: SecretProviderClass is the Schema for the secretproviderclasses
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretProviderClassSpec defines the desired state of SecretProviderClass
          properties:
            parameters:
              additionalProperties:
                type: string
              description: Configuration for specific provider
              type: object
            provider:
              description: Configuration for provider name
              type: string
            secretObjects:
              items:
                description: SecretObject defines the desired state of synced K8s
                  secret objects
                properties:
                  data:
                    items:
                      description: SecretObjectData defines the desired state of synced
                        K8s secret object data
                      properties:
                        key:
                          description: data field to populate
                          type: string
                        objectName:
                          description: name of the object to sync
                          type: string
                      type: object
                    type: array
                  secretName:
                    description: name of the K8s secret object
                    type: string
                  type:
                    description: type of K8s secret object
                    type: string
                type: object
              type: array
          type: object
        status:
          description: SecretProviderClassStatus defines the observed state of SecretProviderClass
          properties:
            byPod:
              items:
                description: ByPodStatus defines the state of SecretProviderClass
                  as seen by an individual controller
                properties:
                  id:
                    description: id of the pod that wrote the status
                    type: string
                  namespace:
                    description: namespace of the pod that wrote the status
                    type: string
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-secrets-store
  namespace: cluster-baseline-settings
  labels:
    app: csi-secrets-store
    app.kubernetes.io/name: csi-secrets-store
    app.kubernetes.io/component: csi-driver
spec:
  selector:
    matchLabels:
      app: csi-secrets-store
  template:
    metadata:
      labels:
        app: csi-secrets-store
        app.kubernetes.io/name: csi-secrets-store
        app.kubernetes.io/component: csi-driver
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
        agentpool: npuser01
      serviceAccountName: secrets-store-csi-driver
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          # PRODUCTION READINESS CHANGE REQUIRED
          # This image should be sourced from a non-public container registry, such as the
          # one deployed along side of this reference implementation.
          # az acr import --source docker.io/weaveworks/kured:1.4.0 -n <your-acr-instance-name>
          # and then set this to
          # image: <your-acr-instance-name>.azurecr.io/weaveworks/kured:1.4.0
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          lifecycle:
            preStop:
              exec:
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "rm -rf /registration/secrets-store.csi.k8s.io-reg.sock",
                  ]
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: Always
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: secrets-store
          # PRODUCTION READINESS CHANGE REQUIRED
          # This image should be sourced from a non-public container registry, such as the
          # one deployed along side of this reference implementation.
          # az acr import --source docker.io/deislabs/secrets-store-csi:v0.0.11 -n <your-acr-instance-name>
          # and then set this to
          # image: <your-acr-instance-name>.azurecr.io/deislabs/secrets-store-csi:v0.0.11
          image: docker.io/deislabs/secrets-store-csi:v0.0.11
          args:
            - "--debug=false"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--provider-volume=/etc/kubernetes/secrets-store-csi-providers"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: Always
          securityContext:
            privileged: true
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: healthz
              initialDelaySeconds: 30
              timeoutSeconds: 10
              periodSeconds: 15
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - name: providers-dir
              mountPath: /etc/kubernetes/secrets-store-csi-providers
        - name: liveness-probe
          # PRODUCTION READINESS CHANGE REQUIRED
          # This image should be sourced from a non-public container registry, such as the
          # one deployed along side of this reference implementation.
          # az acr import --source quay.io/k8scsi/livenessprobe:v1.1.0 -n <your-acr-instance-name>
          # and then set this to
          # image: <your-acr-instance-name>.azurecr.io/k8scsi/livenessprobe:v1.1.0
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          imagePullPolicy: Always
          args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --health-port=9808
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
      volumes:
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi-secrets-store/
            type: DirectoryOrCreate
        - name: providers-dir
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
            type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-secrets-store-provider-azure
  namespace: cluster-baseline-settings
  labels:
    app: csi-secrets-store-provider-azure
    app.kubernetes.io/name: csi-secrets-store-provider-azure
    app.kubernetes.io/component: csi-provider
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: csi-secrets-store-provider-azure
  template:
    metadata:
      labels:
        app: csi-secrets-store-provider-azure
        app.kubernetes.io/name: csi-secrets-store-provider-azure
        app.kubernetes.io/component: csi-provider
    spec:
      containers:
        - name: provider-azure-installer
          image: mcr.microsoft.com/k8s/csi/secrets-store/provider-azure:0.0.6
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          env:
            - name: TARGET_DIR
              value: "/etc/kubernetes/secrets-store-csi-providers"
          volumeMounts:
            - mountPath: "/etc/kubernetes/secrets-store-csi-providers"
              name: providervol
      volumes:
        - name: providervol
          hostPath:
            path: "/etc/kubernetes/secrets-store-csi-providers"
      nodeSelector:
        beta.kubernetes.io/os: linux
        agentpool: npuser01
